(function(){var t,n={}.hasOwnProperty,e=function(t,e){function o(){this.constructor=t}for(var a in e)n.call(e,a)&&(t[a]=e[a]);return o.prototype=e.prototype,t.prototype=new o,t.__super__=e.prototype,t};(t=MyCoins.Views).Budgets||(t.Budgets={}),MyCoins.Views.Budgets.NewBudgetModalView=function(t){function n(){return n.__super__.constructor.apply(this,arguments)}return e(n,t),n.prototype.template='<article id="new-budget-modal" class="my-coins-modal">\n  <header>Create a new Budget</header>\n  <form class="box">\n\n    <div class="row">\n      <div class="input-group col-lg-12">\n        <span class="input-group-addon">Name</span>\n        <div id="new-budget-name-input" class="input-group-btn">\n          <input id="new-budget-name" type="text">\n        </div>\n      </div>\n    </div>\n\n    <div class="row">\n      <div class="input-group col-lg-12">\n        <span class="input-group-addon">Accounts to watch</span>\n        <div id="new-budget-account-group" class="input-group-btn">\n          <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"><span class="text"></span> <span class="caret"></span></button>\n          <ul class="dropdown-menu dropdown-menu-right" role="menu">\n          </ul>\n        </div>\n      </div>\n    </div>\n\n    <div class="row">\n      <div class="input-group col-lg-12">\n        <span class="input-group-addon">Categories to watch</span>\n        <div id="new-budget-category-group" class="input-group-btn">\n          <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"><span class="text"></span> <span class="caret"></span></button>\n          <ul class="dropdown-menu dropdown-menu-right" role="menu">\n\n          </ul>\n        </div>\n      </div>\n    </div>\n\n\n    <div class="row">\n      <div class="input-group col-lg-12">\n        <span class="input-group-addon">Amount</span>\n        <div class="input-group input-dropdow">\n          <input id="new-budget-amount" type="text" placeholder=0>\n          <div id="new-budget-amount-dropdown" class="input-group-btn">\n            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"><span class="text">NZD</span> <span class="caret"></span></button>\n            <ul class="dropdown-menu dropdown-menu-right" role="menu">\n              <li><span>ARS</span></li>\n              <li><span>NZD</span></li>\n              <li><span>USD</span></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class="row">\n      <div class="input-group col-lg-12">\n        <span class="input-group-addon">Start Date</span>\n        <div class="input-group date">\n          <input id="new-budget-start-date" type="text" placeholder="YYYY/MM/DD"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>\n        </div>\n      </div>\n    </div>\n\n    <div class="row">\n      <div class="input-group col-lg-12">\n        <span class="input-group-addon">Repeat</span>\n        <div class="input-group input-dropdow">\n          <input id="new-budget-repeat" type="checkbox">\n        </div>\n      </div>\n    </div>\n\n    <div class="row">\n      <div class="input-group col-lg-12">\n        <span class="input-group-addon">Frequency</span>\n        <div class="input-group input-dropdow">\n          <div id="new-budget-frequency" class="input-group-btn">\n            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"><span class="text">Monthly</span> <span class="caret"></span></button>\n            <ul class="dropdown-menu dropdown-menu-right" role="menu">\n              <li><span>Monthly</span></li>\n              <li><span>Yearly</span></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n  </form>\n  <footer>\n    <button id="new-modal-budget-cancel-btn" class="btn btn-default">Cancel</button>\n    <button id="new-modal-budget-done-btn" class="btn btn-primary">Done</button>\n  </footer>\n</article>',n.prototype.templateAccount='<li class="account" data-account-id=""><span></span></li>',n.prototype.templateTransactionCategory='<li class="display-table">\n  <div class="input-group col-lg-12">\n    <span class="input-group-addon"></span>\n    <div class="input-group-btn">\n      <input type="checkbox">\n    </div>\n  </div>\n</li>',n.prototype.mode="new",n.prototype.type="expense",n.prototype.transactionCategories=[],n.prototype.events={"click #new-budget-account-group .account":"clickAccount","click #new-budget-category-group li":"clickCategory","click #new-modal-budget-cancel-btn":"hide","click #new-modal-budget-done-btn":"submit","keydown #new-budget-amount":"keydownAmount","keyup #new-budget-amount":"keyupAmount"},n.prototype.initialize=function(t){return(null!=t?t.type:void 0)&&(this.type=t.type),(null!=t?t.model:void 0)?this.mode="edit":this.model=new MyCoins.budgetsCollection.model},n.prototype.clickAccount=function(t){var n;return n=parseInt($(t.target).closest(".account").attr("data-account-id")),this.$("#new-budget-account-group .btn:first-of-type .text").text(MyCoins.accountsCollection.findWhere({id:n}).get("name")).attr("data-account-id",n)},n.prototype.clickCategory=function(t){var n;return t.stopPropagation(),t.preventDefault(),n=$(t.target).closest("li input"),console.log($(t.target)[0].tagName,111),n.click(),this.$("#new-budget-category-group .btn:first-of-type .text").text($(t.target).closest("li span").text()),this.$("#new-budget-category-group .btn").attr("data-category-id",$(t.target).closest("li").attr("data-category-id"))},n.prototype.show=function(){return $("#app-modal").fadeIn()},n.prototype.hide=function(){return $("#app-modal").fadeOut()},n.prototype.keydownAmount=function(t){var n,e,o,a,i;for(n=[8,9,13,16,17,18,20,27,35,36,37,38,39,40,45,46,91,92],o=t.which,e=a=48;58>=a;e=++a)n.push(e);for(e=i=96;106>=i;e=++i)n.push(e);return n.indexOf(o)>=0?void 0:t.preventDefault()},n.prototype.keyupAmount=function(t){return $(t.target).val(Number($(t.target).val().replace(/[\,\.\s]/gi,"")).format())},n.prototype.blurDescription=function(t){return $(t.target).val($(t.target).val().trim())},n.prototype.submit=function(t){var n;return this.$(".row").removeClass("error"),n=0,""!==this.$("#new-transaction-amount").val()&&(n=this.$("#new-transaction-amount").val()),this.model.set("accountId",parseInt(this.$("#new-transaction-account-group .btn:first-of-type .text").attr("data-account-id"))),this.$("#new-budget-category-group .btn").attr("data-category-id")&&this.model.set("categoryId",this.$("#new-budget-category-group .btn").attr("data-category-id")),this.model.set("paid",this.$("#new-transaction-paid").prop("checked")),this.model.set("value",Number(String(n).replace(/[\,\.\s]/gi,""))),this.model.set("date",this.$(".input-group.date").datepicker("getDate").format(Date.ISO8601_DATETIME)),"new"===this.mode?(this.collection.create(this.model),this.hide()):(this.model.save(this.model.attributes,{silent:!0}),this.collection.trigger("change"),this.hide())},n.prototype.render=function(){var t;if(this.$el.append(this.template),MyCoins.accountsCollection.each(function(t){return function(n){var e;return e=$(t.templateAccount),e.attr("data-account-id",n.get("id")),e.find("span").text(n.get("name")),t.$("#new-budget-account-group .dropdown-menu").append(e)}}(this)),MyCoins.transactionCategoriesCollection.each(function(t){return function(n){var e;return e=$(t.templateTransactionCategory),e.attr("data-category-id",n.get("id")),e.find("span").text(n.get("name")),t.$("#new-budget-category-group .dropdown-menu").append(e)}}(this)),this.$(".input-group.date").datepicker({format:"yyyy/mm/dd",autoclose:!0,todayHighlight:!0}),this.$(".input-group.date").datepicker("update",Date.create().format("yyyy/mm/dd")),"new"===this.mode){switch(this.$("header").text("Editing a Budget"),t="",this.model.get("categoriesId").length){case 0:t="All";break;case 1:t=MyCoins.transactionCategoriesCollection.get(this.model.get("categoriesId")[0]);break;default:t="Various"}this.$("#new-budget-category-group .btn:first-of-type .text").text(t),this.$("#new-transaction-amount").val(this.model.get("amount").format()),this.$(".input-group.date").datepicker("update",Date.create(this.model.get("date")).format("{yyyy}/{MM}/{dd}"))}return $("body").on("click",function(t){return function(n){return t.$(".btn-group").removeClass("open")}}(this)),this},n}(Backbone.View)}).call(this);